#!/bin/bash
# Generic Disk Cleanup Autofix
# Attempts to clean up disk space when usage is high
# Can be triggered by disk, memory swap, or other space-related conditions

# Get the project root directory
AUTOFIX_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$AUTOFIX_DIR")"
source "$PROJECT_ROOT/modules/common.sh"

disk_cleanup() {
    local filesystem="${1:-/}"
    local usage="${2:-unknown}"
    local calling_module="${3:-unknown}"
    
    log "AUTOFIX: Attempting disk cleanup for $filesystem (${usage}% full) - triggered by $calling_module module"
    
    # Load global autofix configuration
    local autofix_config="$PROJECT_ROOT/config/autofix.conf"
    if [[ -f "$autofix_config" ]]; then
        source "$autofix_config"
    fi
    
    # Common cleanup actions that are safe
    local cleanup_actions=()
    local safe_actions=()
    local manual_actions=()
    
    # Safe actions that don't require root
    if [[ -w "$HOME/.cache" ]]; then
        safe_actions+=("rm -rf $HOME/.cache/thumbnails/*")
        safe_actions+=("find $HOME/.cache -type f -mtime +7 -delete")
    fi
    
    if [[ -w "$HOME/.local/share/Trash" ]]; then
        safe_actions+=("rm -rf $HOME/.local/share/Trash/*")
    fi
    
    # Actions that require root privileges
    if command -v apt-get >/dev/null 2>&1; then
        manual_actions+=("sudo apt-get clean")
        manual_actions+=("sudo apt-get autoremove")
    fi
    
    if command -v yum >/dev/null 2>&1; then
        manual_actions+=("sudo yum clean all")
    fi
    
    if command -v dnf >/dev/null 2>&1; then
        manual_actions+=("sudo dnf clean all")
    fi
    
    # System cleanup (requires root)
    manual_actions+=("sudo find /tmp -type f -mtime +7 -delete")
    manual_actions+=("sudo find /var/tmp -type f -mtime +7 -delete")
    manual_actions+=("sudo journalctl --vacuum-time=30d")
    manual_actions+=("sudo find /var/log -name '*.log' -mtime +30 -delete")
    
    # Execute safe actions automatically
    local safe_cleanup_size=0
    if [[ ${#safe_actions[@]} -gt 0 ]]; then
        log "AUTOFIX: Executing safe user-space cleanup actions..."
        for action in "${safe_actions[@]}"; do
            log "AUTOFIX: Running: $action"
            eval "$action" 2>/dev/null || true
        done
        safe_cleanup_size=$(echo "Safe cleanup completed" | wc -c)
    fi
    
    # Report current disk usage breakdown
    log "AUTOFIX: Current disk usage breakdown for $filesystem:"
    if [[ "$filesystem" == "/" ]]; then
        {
            echo "DISK USAGE ANALYSIS:"
            echo "==================="
            du -sh /var/log /tmp /var/tmp /var/cache /home /usr /opt 2>/dev/null | sort -hr | head -10
            echo ""
            echo "LARGEST FILES:"
            find "$filesystem" -type f -size +100M 2>/dev/null | head -10 | while read -r file; do
                ls -lh "$file" 2>/dev/null || echo "Cannot access: $file"
            done
        } | while IFS= read -r line; do
            log "AUTOFIX: $line"
        done
    fi
    
    # Suggest manual actions
    if [[ ${#manual_actions[@]} -gt 0 ]]; then
        log "AUTOFIX: Manual cleanup actions recommended (require elevated privileges):"
        send_alert "warning" "ðŸ’¾ Disk cleanup: Manual intervention needed for $filesystem (${usage}% full)"
        
        for action in "${manual_actions[@]}"; do
            log "AUTOFIX: Recommended: $action"
        done
        
        # Create a cleanup script for the user
        local cleanup_script="/tmp/disk-cleanup-$(date +%Y%m%d-%H%M%S).sh"
        {
            echo "#!/bin/bash"
            echo "# Automatic disk cleanup script generated by modular-monitor"
            echo "# Generated: $(date)"
            echo "# Filesystem: $filesystem"
            echo "# Usage: ${usage}%"
            echo "# Triggered by: $calling_module module"
            echo ""
            echo "echo 'Starting disk cleanup for $filesystem ($usage% full)...'"
            echo ""
            for action in "${manual_actions[@]}"; do
                echo "echo 'Running: $action'"
                echo "$action"
                echo "echo 'Done.'"
                echo ""
            done
            echo "echo 'Cleanup complete. Check disk usage with: df -h $filesystem'"
        } > "$cleanup_script"
        chmod +x "$cleanup_script"
        
        log "AUTOFIX: Created cleanup script: $cleanup_script"
        send_alert "info" "ðŸ’¾ Disk cleanup script created: $cleanup_script"
    fi
    
    return 0
}

# If script is run directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    filesystem="${1:-/}"
    usage="${2:-unknown}"
    calling_module="${3:-direct}"
    disk_cleanup "$filesystem" "$usage" "$calling_module"
fi

